import Head from 'next/head';
import Navbar from '/components/navbar';
import Footer from '/components/footer';
import Searchbox from '/components/homepage/searchbox';
import Restaurant from 'components/restaurant/restaurant_display';
import styles from '@/styles/restaurant/restaurant.module.css';
import styles1 from '@/styles/components//restaurant/restaurant.module.css'
import styles2 from '@/styles/components/homepage/searchbox.module.css';

import Image from 'next/image';
import { getSession, useSession, signOut } from "next-auth/react";
import React from "react";
import { useState } from 'react';
import { useEffect } from 'react';
import Link from 'next/link';

export default function Resto() {

    
    const [data, setData] = useState([]);
    const [query, setQuery] = useState('');

    useEffect(() => {
        fetch("http://localhost:3000/api/data-usaha", {
            method: "GET"
        }).then((res) => res.json()).then((data) => setData(data.data))
        console.log(data)
    }, []);

    const searchFilter = (data) => { 
        return data.filter(
        (product) => product.namaresto.toLowerCase()
        .replace(/\s+/g, "")
        .includes(query.toLowerCase().replace(/\s+/g, ""))
    )};

    const filtered = searchFilter(data)

    const handleChange = (e) => {
        setQuery(e.target.value)
    }


    return (
        <>
            
        <Head>
        <title>GetFull</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        </Head>

        <Navbar/>

        <main>
        <div className={styles.container}>
            <div className={styles2.search_box}>
                    <button className={styles2.search_icon}>
                        <Image 
                            src="/aset/search box aset/search_icon.svg" 
                            alt="logo google"
                            width={25}
                            height={25}
                        />
                    </button>
                                
                    <input onChange={handleChange} className={styles2.search_form} type="text" placeholder='Cari...'/>

                    <button className={styles2.search_setting}>
                        <Image 
                            src="/aset/search box aset/search_setting.svg" 
                            alt="logo google"
                            width={25}
                            height={25}
                        />
                    </button>
            </div>

            
            {filtered.map((item) => (
                        <div className={styles1.card}>
                            <Link href="#" className={styles1.link}>
                            <Image 
                                src="/aset/listmerch aset/merch1.svg" 
                                alt="logo"
                                width={180}
                                height={150}
                                className={styles1.img}
                            />
            
                            <div className={styles1.card_body}>
                                <h6>{item.namaresto}</h6>
                                <p>{item.alamat}</p>
            
                                <div className={styles1.rating}>
                                    <Image 
                                        src="/aset/restaurant/star.svg" 
                                        alt="logo"
                                        width={20}
                                        height={20}
                                        className="star"
                                    />
                                    <p>4.8</p>
                                </div>
                            </div>
                            </Link>
                        </div>
                    ))}

            
        </div> 
        
        
        </main>

        <Footer/>
    </>
    )
}

// export async function getServerSideProps({req}){
//     const session = await getSession({req})

//     if(!session){
//         return{
//             redirect:{
//                 destination:'http://localhost:3000',
//                 permanent:false
//             }
//         }
//     }

//     return {
//         props: {session}
//     }
// }